# Generated by Django 4.2.14 on 2025-08-16 01:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("launches", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SocialMediaAccount",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("TWITTER", "Twitter/X"),
                            ("LINKEDIN", "LinkedIn"),
                            ("FACEBOOK", "Facebook"),
                            ("INSTAGRAM", "Instagram"),
                            ("TELEGRAM", "Telegram"),
                            ("DISCORD", "Discord"),
                            ("YOUTUBE", "YouTube"),
                            ("TIKTOK", "TikTok"),
                        ],
                        max_length=20,
                    ),
                ),
                ("platform_user_id", models.CharField(max_length=100)),
                ("username", models.CharField(max_length=100)),
                ("display_name", models.CharField(blank=True, max_length=200)),
                ("profile_picture", models.URLField(blank=True, null=True)),
                ("follower_count", models.PositiveIntegerField(default=0)),
                ("following_count", models.PositiveIntegerField(default=0)),
                ("access_token", models.TextField(blank=True)),
                ("refresh_token", models.TextField(blank=True)),
                ("token_expires_at", models.DateTimeField(blank=True, null=True)),
                ("auto_post_enabled", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("SUSPENDED", "Suspended"),
                            ("ERROR", "Error"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("total_posts", models.PositiveIntegerField(default=0)),
                ("total_engagement", models.PositiveIntegerField(default=0)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "social_media_accounts",
            },
        ),
        migrations.CreateModel(
            name="SocialMediaPost",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("TWITTER", "Twitter/X"),
                            ("LINKEDIN", "LinkedIn"),
                            ("FACEBOOK", "Facebook"),
                            ("INSTAGRAM", "Instagram"),
                            ("TELEGRAM", "Telegram"),
                            ("DISCORD", "Discord"),
                            ("YOUTUBE", "YouTube"),
                            ("TIKTOK", "TikTok"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "post_type",
                    models.CharField(
                        choices=[
                            ("TEXT", "Text Only"),
                            ("IMAGE", "Image"),
                            ("VIDEO", "Video"),
                            ("LINK", "Link"),
                            ("POLL", "Poll"),
                            ("STORY", "Story"),
                        ],
                        default="TEXT",
                        max_length=20,
                    ),
                ),
                ("content", models.TextField()),
                (
                    "media_urls",
                    models.JSONField(default=list, help_text="URLs of attached media"),
                ),
                (
                    "media_metadata",
                    models.JSONField(
                        default=dict, help_text="Media metadata and processing info"
                    ),
                ),
                (
                    "platform_post_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("platform_url", models.URLField(blank=True, null=True)),
                ("scheduled_time", models.DateTimeField(blank=True, null=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("SCHEDULED", "Scheduled"),
                            ("PUBLISHED", "Published"),
                            ("FAILED", "Failed"),
                            ("DELETED", "Deleted"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                (
                    "metrics",
                    models.JSONField(
                        default=dict, help_text="Platform-specific engagement metrics"
                    ),
                ),
                ("last_metrics_update", models.DateTimeField(blank=True, null=True)),
                ("is_ai_generated", models.BooleanField(default=False)),
                ("ai_prompt", models.TextField(blank=True)),
                ("ai_agent_used", models.CharField(blank=True, max_length=100)),
                (
                    "campaign_id",
                    models.CharField(
                        blank=True,
                        help_text="Associated marketing campaign",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="social_media.socialmediaaccount",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "social_media_posts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SocialMediaHashtag",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("tag", models.CharField(max_length=100, unique=True)),
                ("category", models.CharField(blank=True, max_length=50)),
                ("usage_count", models.PositiveIntegerField(default=0)),
                (
                    "trending_score",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "platform_data",
                    models.JSONField(
                        default=dict, help_text="Platform-specific hashtag data"
                    ),
                ),
                ("is_trending", models.BooleanField(default=False)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "social_media_hashtags",
                "ordering": ["-trending_score", "-usage_count"],
                "indexes": [
                    models.Index(
                        fields=["category", "is_trending"],
                        name="social_medi_categor_e9d494_idx",
                    ),
                    models.Index(
                        fields=["trending_score"], name="social_medi_trendin_067188_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SocialMediaCampaign",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "platforms",
                    models.JSONField(default=list, help_text="Target platforms"),
                ),
                (
                    "content_templates",
                    models.JSONField(
                        default=dict, help_text="Platform-specific content templates"
                    ),
                ),
                (
                    "posting_schedule",
                    models.JSONField(
                        default=dict, help_text="Posting frequency and timing"
                    ),
                ),
                (
                    "budget",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("target_reach", models.PositiveIntegerField(default=0)),
                ("target_engagement", models.PositiveIntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("ACTIVE", "Active"),
                            ("PAUSED", "Paused"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("use_ai_content", models.BooleanField(default=True)),
                ("ai_tone", models.CharField(default="professional", max_length=50)),
                ("ai_guidelines", models.TextField(blank=True)),
                ("total_posts", models.PositiveIntegerField(default=0)),
                ("total_reach", models.PositiveIntegerField(default=0)),
                ("total_engagement", models.PositiveIntegerField(default=0)),
                (
                    "conversion_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "launch",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_campaigns",
                        to="launches.tokenlaunch",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_campaigns",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "social_media_campaigns",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SocialMediaAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("TWITTER", "Twitter/X"),
                            ("LINKEDIN", "LinkedIn"),
                            ("FACEBOOK", "Facebook"),
                            ("INSTAGRAM", "Instagram"),
                            ("TELEGRAM", "Telegram"),
                            ("DISCORD", "Discord"),
                            ("YOUTUBE", "YouTube"),
                            ("TIKTOK", "TikTok"),
                        ],
                        max_length=20,
                    ),
                ),
                ("posts_published", models.PositiveIntegerField(default=0)),
                ("total_reach", models.PositiveIntegerField(default=0)),
                ("total_impressions", models.PositiveIntegerField(default=0)),
                ("total_engagement", models.PositiveIntegerField(default=0)),
                ("followers_gained", models.IntegerField(default=0)),
                ("followers_lost", models.IntegerField(default=0)),
                ("net_follower_change", models.IntegerField(default=0)),
                (
                    "average_engagement_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("best_posting_time", models.TimeField(blank=True, null=True)),
                (
                    "metrics_breakdown",
                    models.JSONField(
                        default=dict, help_text="Detailed platform-specific metrics"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_analytics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "social_media_analytics",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="SocialMediaWebhook",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("TWITTER", "Twitter/X"),
                            ("LINKEDIN", "LinkedIn"),
                            ("FACEBOOK", "Facebook"),
                            ("INSTAGRAM", "Instagram"),
                            ("TELEGRAM", "Telegram"),
                            ("DISCORD", "Discord"),
                            ("YOUTUBE", "YouTube"),
                            ("TIKTOK", "TikTok"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("POST_PUBLISHED", "Post Published"),
                            ("POST_DELETED", "Post Deleted"),
                            ("NEW_FOLLOWER", "New Follower"),
                            ("UNFOLLOWER", "Unfollower"),
                            ("MENTION", "Mention"),
                            ("COMMENT", "Comment"),
                            ("LIKE", "Like"),
                            ("SHARE", "Share"),
                            ("MESSAGE", "Direct Message"),
                        ],
                        max_length=30,
                    ),
                ),
                ("event_id", models.CharField(max_length=100)),
                ("event_data", models.JSONField(default=dict)),
                ("raw_payload", models.TextField()),
                ("is_processed", models.BooleanField(default=False)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "post",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social_media.socialmediapost",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "social_media_webhooks",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["platform", "event_type"],
                        name="social_medi_platfor_bd452c_idx",
                    ),
                    models.Index(
                        fields=["is_processed"], name="social_medi_is_proc_be3354_idx"
                    ),
                    models.Index(
                        fields=["event_id"], name="social_medi_event_i_560170_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SocialMediaTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("LAUNCH_ANNOUNCEMENT", "Launch Announcement"),
                            ("MILESTONE_UPDATE", "Milestone Update"),
                            ("COMMUNITY_UPDATE", "Community Update"),
                            ("EDUCATIONAL", "Educational Content"),
                            ("PROMOTIONAL", "Promotional"),
                            ("ENGAGEMENT", "Engagement Post"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "content_template",
                    models.TextField(help_text="Template with placeholders"),
                ),
                (
                    "variables",
                    models.JSONField(
                        default=list, help_text="Available variables for substitution"
                    ),
                ),
                (
                    "platforms",
                    models.JSONField(default=list, help_text="Supported platforms"),
                ),
                (
                    "platform_specific_content",
                    models.JSONField(
                        default=dict, help_text="Platform-specific variations"
                    ),
                ),
                ("usage_count", models.PositiveIntegerField(default=0)),
                (
                    "average_engagement",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("is_public", models.BooleanField(default=False)),
                ("is_featured", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "social_media_templates",
                "ordering": ["-usage_count", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["template_type", "is_public"],
                        name="social_medi_templat_5d05f6_idx",
                    ),
                    models.Index(
                        fields=["is_featured"], name="social_medi_is_feat_44ba48_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SocialMediaSchedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("scheduled_time", models.DateTimeField()),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("is_processed", models.BooleanField(default=False)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("max_retries", models.PositiveIntegerField(default=3)),
                ("next_retry", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "post",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule",
                        to="social_media.socialmediapost",
                    ),
                ),
            ],
            options={
                "db_table": "social_media_schedules",
                "ordering": ["scheduled_time"],
                "indexes": [
                    models.Index(
                        fields=["scheduled_time", "is_processed"],
                        name="social_medi_schedul_c733b7_idx",
                    ),
                    models.Index(
                        fields=["next_retry"], name="social_medi_next_re_17fdf3_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="socialmediapost",
            index=models.Index(
                fields=["user", "platform", "status"],
                name="social_medi_user_id_ac16c3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="socialmediapost",
            index=models.Index(
                fields=["scheduled_time"], name="social_medi_schedul_b4a661_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialmediapost",
            index=models.Index(
                fields=["published_at"], name="social_medi_publish_cf6753_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialmediapost",
            index=models.Index(
                fields=["campaign_id"], name="social_medi_campaig_7658b1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialmediacampaign",
            index=models.Index(
                fields=["user", "status"], name="social_medi_user_id_a8a315_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialmediacampaign",
            index=models.Index(
                fields=["start_date", "end_date"], name="social_medi_start_d_534334_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialmediaanalytics",
            index=models.Index(
                fields=["user", "platform", "date"],
                name="social_medi_user_id_8ebf07_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="socialmediaanalytics",
            unique_together={("user", "date", "platform")},
        ),
        migrations.AddIndex(
            model_name="socialmediaaccount",
            index=models.Index(
                fields=["user", "platform"], name="social_medi_user_id_9f8466_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialmediaaccount",
            index=models.Index(fields=["status"], name="social_medi_status_ab48bd_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="socialmediaaccount",
            unique_together={("user", "platform", "platform_user_id")},
        ),
    ]
