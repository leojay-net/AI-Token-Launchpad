# Generated by Django 4.2.14 on 2025-08-16 01:55

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LaunchPhase",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("order", models.PositiveIntegerField()),
                (
                    "requirements",
                    models.JSONField(
                        default=list, help_text="Requirements for this phase"
                    ),
                ),
                (
                    "deliverables",
                    models.JSONField(default=list, help_text="Expected deliverables"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("SKIPPED", "Skipped"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("estimated_duration", models.DurationField(blank=True, null=True)),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "launch_phases",
                "ordering": ["launch", "order"],
            },
        ),
        migrations.CreateModel(
            name="LaunchTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "config",
                    models.JSONField(
                        default=dict,
                        help_text="Template configuration and default values",
                    ),
                ),
                (
                    "marketing_templates",
                    models.JSONField(
                        default=dict, help_text="Pre-built marketing content templates"
                    ),
                ),
                (
                    "phases",
                    models.JSONField(
                        default=list, help_text="Launch phases with timeline"
                    ),
                ),
                (
                    "requirements",
                    models.JSONField(
                        default=list, help_text="Required items for this template"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "launch_templates",
            },
        ),
        migrations.CreateModel(
            name="TokenCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                ("slug", models.SlugField(unique=True)),
                ("icon", models.URLField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Token Categories",
                "db_table": "token_categories",
            },
        ),
        migrations.CreateModel(
            name="TokenLaunch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("symbol", models.CharField(max_length=20)),
                ("description", models.TextField()),
                (
                    "network",
                    models.CharField(
                        choices=[
                            ("ETHEREUM", "Ethereum"),
                            ("POLYGON", "Polygon"),
                            ("BSC", "Binance Smart Chain"),
                            ("ARBITRUM", "Arbitrum"),
                            ("OPTIMISM", "Optimism"),
                            ("AVALANCHE", "Avalanche"),
                            ("SOLANA", "Solana"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "contract_address",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "total_supply",
                    models.DecimalField(decimal_places=0, default=0, max_digits=30),
                ),
                (
                    "initial_price",
                    models.DecimalField(
                        decimal_places=8, default=Decimal("0"), max_digits=20
                    ),
                ),
                (
                    "funding_goal",
                    models.DecimalField(
                        decimal_places=8, default=Decimal("0"), max_digits=20
                    ),
                ),
                (
                    "funding_raised",
                    models.DecimalField(
                        decimal_places=8, default=Decimal("0"), max_digits=20
                    ),
                ),
                ("launch_date", models.DateTimeField(blank=True, null=True)),
                ("presale_start", models.DateTimeField(blank=True, null=True)),
                ("presale_end", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PLANNING", "Planning"),
                            ("IN_REVIEW", "In Review"),
                            ("APPROVED", "Approved"),
                            ("PREPARING", "Preparing"),
                            ("LIVE", "Live"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                            ("FAILED", "Failed"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                (
                    "progress_percentage",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("logo_url", models.URLField(blank=True, null=True)),
                ("banner_url", models.URLField(blank=True, null=True)),
                ("website_url", models.URLField(blank=True, null=True)),
                ("whitepaper_url", models.URLField(blank=True, null=True)),
                ("twitter_url", models.URLField(blank=True, null=True)),
                ("telegram_url", models.URLField(blank=True, null=True)),
                ("discord_url", models.URLField(blank=True, null=True)),
                ("medium_url", models.URLField(blank=True, null=True)),
                (
                    "team_info",
                    models.JSONField(default=dict, help_text="Team member information"),
                ),
                (
                    "legal_docs",
                    models.JSONField(
                        default=list, help_text="Legal documentation URLs"
                    ),
                ),
                (
                    "audit_reports",
                    models.JSONField(default=list, help_text="Security audit reports"),
                ),
                (
                    "launch_plan",
                    models.JSONField(
                        default=dict, help_text="Detailed launch plan and strategy"
                    ),
                ),
                (
                    "marketing_plan",
                    models.JSONField(
                        default=dict, help_text="Marketing strategy and timeline"
                    ),
                ),
                (
                    "ai_generated_content",
                    models.JSONField(
                        default=dict, help_text="AI-generated marketing content"
                    ),
                ),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("interest_count", models.PositiveIntegerField(default=0)),
                (
                    "social_engagement",
                    models.JSONField(
                        default=dict, help_text="Social media engagement metrics"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("launched_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="launches.tokencategory",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_launches",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="launches.launchtemplate",
                    ),
                ),
            ],
            options={
                "db_table": "token_launches",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="launchtemplate",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="launches.tokencategory"
            ),
        ),
        migrations.CreateModel(
            name="LaunchTask",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="MEDIUM",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("TODO", "To Do"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("BLOCKED", "Blocked"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="TODO",
                        max_length=20,
                    ),
                ),
                ("estimated_hours", models.PositiveIntegerField(blank=True, null=True)),
                ("actual_hours", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "attachments",
                    models.JSONField(default=list, help_text="File attachments"),
                ),
                ("notes", models.TextField(blank=True)),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dependencies",
                    models.ManyToManyField(blank=True, to="launches.launchtask"),
                ),
                (
                    "phase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="launches.launchphase",
                    ),
                ),
            ],
            options={
                "db_table": "launch_tasks",
                "ordering": ["phase", "priority", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="LaunchReview",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ]
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "execution_rating",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ]
                    ),
                ),
                (
                    "communication_rating",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ]
                    ),
                ),
                (
                    "innovation_rating",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ]
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "launch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="launches.tokenlaunch",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "launch_reviews",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="launchphase",
            name="launch",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="phases",
                to="launches.tokenlaunch",
            ),
        ),
        migrations.CreateModel(
            name="LaunchMilestone",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("target_date", models.DateTimeField()),
                ("achieved_date", models.DateTimeField(blank=True, null=True)),
                ("is_critical", models.BooleanField(default=False)),
                ("is_achieved", models.BooleanField(default=False)),
                ("target_metrics", models.JSONField(default=dict)),
                ("achieved_metrics", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "launch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="milestones",
                        to="launches.tokenlaunch",
                    ),
                ),
            ],
            options={
                "db_table": "launch_milestones",
                "ordering": ["target_date"],
            },
        ),
        migrations.CreateModel(
            name="LaunchInterest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "interest_level",
                    models.PositiveIntegerField(
                        help_text="Interest level from 1-5",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "investment_intent",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="Intended investment amount",
                        max_digits=20,
                        null=True,
                    ),
                ),
                ("notify_on_launch", models.BooleanField(default=True)),
                ("notify_on_updates", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "launch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interested_users",
                        to="launches.tokenlaunch",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "launch_interests",
            },
        ),
        migrations.CreateModel(
            name="LaunchComment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("content", models.TextField()),
                ("is_public", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "launch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="launches.tokenlaunch",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="launches.launchcomment",
                    ),
                ),
            ],
            options={
                "db_table": "launch_comments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LaunchAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("page_views", models.PositiveIntegerField(default=0)),
                ("unique_visitors", models.PositiveIntegerField(default=0)),
                ("new_interests", models.PositiveIntegerField(default=0)),
                ("new_comments", models.PositiveIntegerField(default=0)),
                ("social_shares", models.PositiveIntegerField(default=0)),
                (
                    "conversion_rate",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=5
                    ),
                ),
                ("twitter_engagement", models.JSONField(default=dict)),
                ("linkedin_engagement", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "launch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="launches.tokenlaunch",
                    ),
                ),
            ],
            options={
                "db_table": "launch_analytics",
                "ordering": ["-date"],
            },
        ),
        migrations.AddIndex(
            model_name="tokenlaunch",
            index=models.Index(
                fields=["status", "created_at"], name="token_launc_status_9d6810_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tokenlaunch",
            index=models.Index(
                fields=["category", "status"], name="token_launc_categor_fbcabc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tokenlaunch",
            index=models.Index(
                fields=["creator", "status"], name="token_launc_creator_c1b7a3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tokenlaunch",
            index=models.Index(
                fields=["launch_date"], name="token_launc_launch__05a171_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="launchreview",
            unique_together={("launch", "reviewer")},
        ),
        migrations.AlterUniqueTogether(
            name="launchphase",
            unique_together={("launch", "order")},
        ),
        migrations.AlterUniqueTogether(
            name="launchinterest",
            unique_together={("user", "launch")},
        ),
        migrations.AlterUniqueTogether(
            name="launchanalytics",
            unique_together={("launch", "date")},
        ),
    ]
